{"componentChunkName":"component---src-templates-blog-post-js","path":"/unit-vs-integration-vs-end-to-end-tests/","result":{"data":{"site":{"siteMetadata":{"title":"P`s Blog","author":"Princiya Sequeira"}},"markdownRemark":{"id":"e308d63e-4503-5261-8374-84d8d7df83ad","html":"<ul>\n<li>\n<p><strong>Unit tests</strong>: Unit tests are atomic. They are within the scope of one component or action or reducer or saga and do not go beyond the scope of this atomic component.</p>\n<ul>\n<li>Example: Unit tests do not involve <code class=\"language-text\">reducer &amp;&amp; saga</code> being tested together or <code class=\"language-text\">component &amp;&amp; action &amp;&amp; reducer &amp;&amp; saga</code> being tested together.</li>\n</ul>\n</li>\n<li>\n<p><strong>Integration tests</strong>: Integration tests are an extension of unit tests and involve integrating multiple components.</p>\n<ul>\n<li>Example: component click on button -> throws an action -> watched by the saga -> calls an api endpoint (mocked) -> modify reducers state -> changes something on the same or another component.</li>\n</ul>\n</li>\n<li><strong>End to end tests</strong>: We use Cypress for end to end testing where we test the end results like how an external user with interact with our system / UI.</li>\n</ul>\n<h2 id=\"resources\"><a href=\"#resources\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h2>\n<ul>\n<li>\n<blockquote class=\"twitter-tweet\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">ðŸ¤” Question for tech folks ðŸ¤”<br><br>&quot;How do you differentiate between integration tests and end-to-end tests? They&#39;re very similar and I cannot for the life of me define a concrete line where one ends and the other begins.&quot;<br><br>Anyone have thoughts or resources on this?</p>&mdash; CaroOoOolyn ðŸ‘» (@carolstran) <a href=\"https://twitter.com/carolstran/status/1194647777143349248?ref_src=twsrc%5Etfw\">November 13, 2019</a></blockquote>\n\n</li>\n<li><a href=\"https://kentcdodds.com/blog/unit-vs-integration-vs-e2e-tests\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://kentcdodds.com/blog/unit-vs-integration-vs-e2e-tests</a></li>\n</ul>","timeToRead":1,"frontmatter":{"title":"How to know if you are writing integration tests or end to end tests","tags":["tests","technical"],"date":"July 22, 2020","spoiler":"Unit tests vs Integration tests vs End to end tests","cta":"Tests"},"fields":{"slug":"/unit-vs-integration-vs-end-to-end-tests/","langKey":"en"}}},"pageContext":{"slug":"/unit-vs-integration-vs-end-to-end-tests/","previous":{"fields":{"slug":"/contract-tests-introduction/","langKey":"en","directoryName":"contract-tests-introduction","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Introduction to contract tests","tags":["tests","technical"]}},"next":{"fields":{"slug":"/to-d3-or-not/","langKey":"en","directoryName":"to-d3-or-not","maybeAbsoluteLinks":[]},"frontmatter":{"title":"To D3 or not","tags":["d3.js","technical","visualisations"]}},"translations":[],"translatedLinks":[]}}}