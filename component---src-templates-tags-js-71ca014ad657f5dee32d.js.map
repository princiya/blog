{"version":3,"sources":["webpack:///./src/components/TagLabels.js","webpack:///./src/components/BlogItems.js","webpack:///./src/utils/helpers.js","webpack:///./src/templates/tags.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js"],"names":["TagLabels","tags","className","style","zIndex","map","tag","boxShadow","to","rel","BlogItems","posts","langKey","node","frontmatter","includes","title","get","fields","slug","key","fontFamily","fontSize","rhythm","marginBottom","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","minutes","cups","Math","round","Array","E","fill","join","lang","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","Tags","pageContext","data","location","allMarkdownRemark","edges","totalCount","tagHeader","siteTitle","margin","pageQuery","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","$export","P"],"mappings":"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","file":"component---src-templates-tags-js-71ca014ad657f5dee32d.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst TagLabels = ({ tags }) => (\n  <div className=\"tags\" style={{ zIndex: 1 }}>\n    {tags.map(tag => (\n      <Link\n        style={{ boxShadow: 'none' }}\n        to={`/tags/${tag}`}\n        rel=\"bookmark\"\n        className=\"tagLabel\"\n      >\n        {tag}\n      </Link>\n    ))}\n  </div>\n);\n\nexport default TagLabels;\n","import React from 'react';\nimport get from 'lodash/get';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport TagLabels from './TagLabels';\n\nconst BlogItems = ({ posts, langKey }) => (\n  <div className=\"blog-items\">\n    {posts.map(({ node }) => {\n      if ((node.frontmatter.tags || []).includes('draft')) return null;\n\n      const title = get(node, 'frontmatter.title') || node.fields.slug;\n\n      return (\n        <article key={node.fields.slug} className=\"blog-item\">\n          <div className=\"blog-item__content\">\n            <header style={{ zIndex: 1 }}>\n              <h3\n                style={{\n                  fontFamily: 'Montserrat, sans-serif',\n                  fontSize: rhythm(1),\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link\n                  style={{ boxShadow: 'none' }}\n                  to={node.fields.slug}\n                  rel=\"bookmark\"\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {formatPostDate(node.frontmatter.date, langKey)}\n                {` • ${formatReadingTime(node.timeToRead)}`}\n              </small>\n            </header>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.spoiler,\n              }}\n              style={{ zIndex: 1 }}\n            />\n            <TagLabels tags={node.frontmatter.tags || []} />\n          </div>\n        </article>\n      );\n    })}\n  </div>\n);\n\nexport default BlogItems;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport BlogItems from '../components/BlogItems';\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n  const siteTitle = get(data, 'site.siteMetadata.title');\n\n  return (\n    <Layout location={location} title={siteTitle} margin=\"custom\">\n      <SEO />\n      <h1>{tagHeader}</h1>\n      <Link to=\"/tags\">All categories</Link>\n      {totalCount > 0 && (\n        <BlogItems posts={edges} langKey={pageContext.langKey} />\n      )}\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}